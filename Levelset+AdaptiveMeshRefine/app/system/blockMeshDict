/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  5                                     |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;
/*
vertices
(
    (0 0 0)
    (1.5 0 0)
    (0 0.49 0)
    (1.5 0.49 0)
    (0 0.51 0)
    (1.5 0.51 0)
    (0 1 0)
    (1.5 1 0)
    
    (0 0 0.01)
    (1.5 0 0.01)
    (0 0.49 0.01)
    (1.5 0.49 0.01)
    (0 0.51 0.01)
    (1.5 0.51 0.01)
    (0 1 0.01)
    (1.5 1 0.01)
);

blocks
(
    hex (0 1 3 2 8 9 11 10) (66 25 1) simpleGrading (1 1 1)
    hex (2 3 5 4 10 11 13 12) (66 1 1) simpleGrading (1 1 1)
    hex (4 5 7 6 12 13 15 14) (66 25 1) simpleGrading (1 1 1)
);
*/
/**/
vertices
(
    (0 0 0)
    (2 0 0)
    (0 0.49 0)
    (2 0.49 0)
    (0 0.51 0)
    (2 0.51 0)
    (0 1 0)
    (2 1 0)
    
    (0 0 0.01)
    (2 0 0.01)
    (0 0.49 0.01)
    (2 0.49 0.01)
    (0 0.51 0.01)
    (2 0.51 0.01)
    (0 1 0.01)
    (2 1 0.01)
);

blocks
(
    hex (0 1 3 2 8 9 11 10) (100 25 1) simpleGrading (1 1 1)
    hex (2 3 5 4 10 11 13 12) (100 1 1) simpleGrading (1 1 1)
    hex (4 5 7 6 12 13 15 14) (100 25 1) simpleGrading (1 1 1)
);

edges
(
);

boundary
(
    left
    {
        type patch;
        faces
        (
            (2 0 8 10)
            (4 2 10 12)
            (6 4 12 14)
        );
    }
    none
    {
        type patch;
        faces
        (
            (0 1 9 8)
            (6 7 15 14)
            (1 3 11 9)
            (5 7 15 13)
        );
    }
    force
    {
        type patch;
        faces
        (
            (3 5 13 11)
        );
    }
    frontAndBack
    {
        type empty;
        faces
        (
            (0 2 3 1)
            (2 4 5 3)
            (4 6 7 5)
            (8 9 11 10)
            (10 11 13 12)
            (12 13 15 14)            
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
